openapi: 3.0.3
info:
  title: Типы материалов
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Dev Server
tags:
  - name: MTP
    description: Materials Types Properties

paths:
  /v1/materials-types-properties:
    get:
      summary: Метод получения списка типов материалов
      description: Метод предназначен для получения списка типов материалов, сохраненных в БД
      operationId: getMaterialsTypesProperties
      tags:
        - MTP

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/corellationId"
        - $ref: "#/components/parameters/attrs"

      responses:
        "200":
          description: Был получен список типов материалов
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MaterialsTypesProperties"
        "401":
          $ref: "#/components/responses/Error401Response"
        "403":
          $ref: "#/components/responses/Error403Response"
        "5XX":
          $ref: "#/components/responses/Error5XXResponse"

    post:
      summary: Метод добавления типа материала
      description: Метод предназначен для создания нового типа материала в БД
      operationId: createMaterialsTypesProperties
      tags:
        - MTP

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/corellationId"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/MaterialsTypesProperties"

      responses:
        "201":
          description: Тип материала успешно создан
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CreateEntityResult"
        "400":
          $ref: "#/components/responses/Error400Response"
        "401":
          $ref: "#/components/responses/Error401Response"
        "403":
          $ref: "#/components/responses/Error403Response"
        "5XX":
          $ref: "#/components/responses/Error5XXResponse"

  /v1/material-type-property/{propertyId}:
    get:
      summary: Метод получения типа материала по его идентификатору
      description: Метод предназначен для получения данных типа материала из БД
      operationId: getMaterialsTypesProperties
      tags:
        - MTP

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/corellationId"
        - name: propertyId
          in: path
          required: true
          description: Идентификатор типа материала
          schema:
            type: integer
          example: 1000
        - $ref: "#/components/parameters/attrs"

      responses:
        "200":
          description: Был получен тип материала
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/MaterialsTypesProperties"
        "401":
          $ref: "#/components/responses/Error401Response"
        "403":
          $ref: "#/components/responses/Error403Response"
        "404":
          $ref: "#/components/responses/Error404Response"
        "5XX":
          $ref: "#/components/responses/Error5XXResponse"

    put:
      summary: Метод обновления типа материала
      description: Метод предназначен для обновления типа материала в БД
      operationId: updateMaterialsTypesProperties
      tags:
        - MTP

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/corellationId"
        - name: propertyId
          in: path
          required: true
          description: Идентификатор типа материала
          schema:
            type: integer
          example: 1000

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/MaterialsTypesProperties"

      responses:
        "204":
          description: Тип материала успешно создан
        "400":
          $ref: "#/components/responses/Error400Response"
        "401":
          $ref: "#/components/responses/Error401Response"
        "403":
          $ref: "#/components/responses/Error403Response"
        "5XX":
          $ref: "#/components/responses/Error5XXResponse"

    delete:
      summary: Метод удаления типа материала по его идентификатору
      description: Метод предназначен для удаления данных о типе материала в БД
      operationId: deleteMaterialsTypesProperties
      tags:
        - MTP

      security:
        - bearerAuth: []

      parameters:
        - name: propertyId
          in: path
          required: true
          description: Идентификатор типа материала
          schema:
            type: integer
          example: 1000

      responses:
        "204":
          description: Тип материала был удалён

components:

  parameters:
    corellationId: # RFC-6648
      name: CorellationId
      in: header
      schema:
        type: string
      example: "02fa8b1f-672503f2-5add1be1-90ab5d42"

    attrs:
      description: Список атрибутов, которые необходимо вернуть
      name: attrs
      in: query
      schema:
        type: array
        items:
          type: string
      example: [attributeName1, attributeName2]

  schemas:
    AppError:
      type: object
      required:
        - title
        - detail
        - request
        - time
        - errorTraceId
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Entity not found"
        detail:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Entity [User] with id = [123456] not found. You MUST use PUT to add entity instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд
          type: string
          example: "2023-01-01T10:25:37.43+01"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    AppErrorAttribute:
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым. Указано недопустимое значение атрибута"

    CreateEntityResult:
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор созданного ресурса
          type: integer
          example: 1000

    MaterialsTypesProperties:
      type: object
      description: |-
        Типы материалов. \
        Спецификация https://printrobot.atlassian.net/l/cp/8Qk2Hcs0
      properties:
        propertyId: # get, store
          type: integer
          example: 2
        objectId: # get, create
          type: integer
          example: 13
        propertyName: # get, create, store
          type: string
          example: "ширина"
        propertyVar: # get, create, store
          description: |-
            Имя переменной в формулах;
          type: string
          example: "mt_paper_width"
        valueByDefault: # get, create, store
          type: string
          example: "700"
        measure_id: # get, create, store
          description: Ссылка на единицы измерения
          type: integer
          example: 9
        inputType: # get, store
          description: возможные варианты отображения в UI и соответствия в БД
          type: string
          example: "list:{yes=Да;no=Нет}"
        isFixed: # get, create, store
          description: что это?
          type: boolean
          example: 1
        orderField:
          description: что это?
          type: integer
          example: 3
        tag:
          description: что это?
          type: string
          example: NULL

  responses:
    Error400Response:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AppErrorAttribute"

    Error401Response:
      description: Пользователь не был аутентифицирован
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"

    Error403Response:
      description: Пользователю с текущими правами доступ отклонён
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"

    Error404Response:
      description: Запрашиваемый ресурт не был найден
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"

    Error5XXResponse:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT